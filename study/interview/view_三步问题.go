package main
/**
	算法描述:
	三步问题。有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上1阶、2阶或3阶。实现一种方法，计算小孩有多少种上楼梯的方式。结果可能很大，你需要对结果模1000000007。

示例1:

 输入：n = 3
 输出：4
 说明: 有四种走法
示例2:

 输入：n = 5
 输出：13
提示:

n范围在[1, 1000000]之间
 */
func waysToStep(n int) int {
	//采用动态规划
	var dp  = make([]int,n + 3)
	dp[0] = 1
	dp[1] = 1
	dp[2] = 2
	for i := 3; i <= n ; i ++ {
		dp[i] = (dp[i - 1] + dp[i -2] + dp[i - 3]) % 1000000007
	}

	//返回
	return dp[n]

}