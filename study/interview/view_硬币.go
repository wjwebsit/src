package main
/**
	算法描述
	硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007)

示例1:

 输入: n = 5
 输出：2
 解释: 有两种方式可以凑成总金额:
5=5
5=1+1+1+1+1
示例2:

 输入: n = 10
 输出：4
 解释: 有四种方式可以凑成总金额:
10=10
10=5+5
10=5+1+1+1+1+1
10=1+1+1+1+1+1+1+1+1+1
说明：

注意:

你可以假设：

0 <= n (总金额) <= 1000000
通过次数18,104提交次数35,889

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/coin-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
func waysToChange(n int) int {
	//声明硬币数组
	coins := []int{1,5,10,25}

	//声明dp
	var dp = make([]int,n + 1)
	dp[0] = 1
	for _,coin := range coins {
		for i := coin;i <= n ; i ++ {
			dp[i] = (dp[i] + dp[i - coin])
		}
	}


	//返回
	return dp[n] % 1000000007
}